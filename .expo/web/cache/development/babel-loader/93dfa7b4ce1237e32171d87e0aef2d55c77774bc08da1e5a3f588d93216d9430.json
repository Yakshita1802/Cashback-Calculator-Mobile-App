{"ast":null,"code":"import { defineAnimation } from \"./util\";\nexport function withSequence() {\n  'worklet';\n\n  for (var _len = arguments.length, _animations = new Array(_len), _key = 0; _key < _len; _key++) {\n    _animations[_key] = arguments[_key];\n  }\n  return defineAnimation(_animations[0], function () {\n    'worklet';\n\n    var animations = _animations.map(function (a) {\n      var result = typeof a === 'function' ? a() : a;\n      result.finished = false;\n      return result;\n    });\n    var firstAnimation = animations[0];\n    var callback = function callback(finished) {\n      if (finished) {\n        return;\n      }\n      animations.forEach(function (animation) {\n        if (typeof animation.callback === 'function' && !animation.finished) {\n          animation.callback(finished);\n        }\n      });\n    };\n    function sequence(animation, now) {\n      var currentAnim = animations[animation.animationIndex];\n      var finished = currentAnim.onFrame(currentAnim, now);\n      animation.current = currentAnim.current;\n      if (finished) {\n        if (currentAnim.callback) {\n          currentAnim.callback(true);\n        }\n        currentAnim.finished = true;\n        animation.animationIndex += 1;\n        if (animation.animationIndex < animations.length) {\n          var nextAnim = animations[animation.animationIndex];\n          nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n          return false;\n        }\n        return true;\n      }\n      return false;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.animationIndex = 0;\n      if (previousAnimation === undefined) {\n        previousAnimation = animations[animations.length - 1];\n      }\n      firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n    }\n    return {\n      isHigherOrder: true,\n      onFrame: sequence,\n      onStart: onStart,\n      animationIndex: 0,\n      current: firstAnimation.current,\n      callback: callback\n    };\n  });\n}","map":{"version":3,"names":["defineAnimation","withSequence","_len","arguments","length","_animations","Array","_key","animations","map","a","result","finished","firstAnimation","callback","forEach","animation","sequence","now","currentAnim","animationIndex","onFrame","current","nextAnim","onStart","value","previousAnimation","undefined","isHigherOrder"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\animation\\sequence.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport { NextAnimation, SequenceAnimation } from './commonTypes';\nimport {\n  Animation,\n  AnimatableValue,\n  AnimationObject,\n  Timestamp,\n} from '../commonTypes';\n\nexport function withSequence(\n  ..._animations: NextAnimation<AnimationObject>[]\n): Animation<SequenceAnimation> {\n  'worklet';\n  return defineAnimation<SequenceAnimation>(\n    _animations[0] as SequenceAnimation,\n    () => {\n      'worklet';\n      const animations = _animations.map((a) => {\n        const result = typeof a === 'function' ? a() : a;\n        result.finished = false;\n        return result;\n      });\n      const firstAnimation = animations[0];\n\n      const callback = (finished: boolean): void => {\n        if (finished) {\n          // we want to call the callback after every single animation\n          // not after all of them\n          return;\n        }\n        // this is going to be called only if sequence has been cancelled\n        animations.forEach((animation) => {\n          if (typeof animation.callback === 'function' && !animation.finished) {\n            animation.callback(finished);\n          }\n        });\n      };\n\n      function sequence(animation: SequenceAnimation, now: Timestamp): boolean {\n        const currentAnim = animations[animation.animationIndex];\n        const finished = currentAnim.onFrame(currentAnim, now);\n        animation.current = currentAnim.current;\n        if (finished) {\n          // we want to call the callback after every single animation\n          if (currentAnim.callback) {\n            currentAnim.callback(true /* finished */);\n          }\n          currentAnim.finished = true;\n          animation.animationIndex += 1;\n          if (animation.animationIndex < animations.length) {\n            const nextAnim = animations[animation.animationIndex];\n            nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n            return false;\n          }\n          return true;\n        }\n        return false;\n      }\n\n      function onStart(\n        animation: SequenceAnimation,\n        value: AnimatableValue,\n        now: Timestamp,\n        previousAnimation: SequenceAnimation\n      ): void {\n        animation.animationIndex = 0;\n        if (previousAnimation === undefined) {\n          previousAnimation = animations[\n            animations.length - 1\n          ] as SequenceAnimation;\n        }\n        firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n      }\n\n      return {\n        isHigherOrder: true,\n        onFrame: sequence,\n        onStart,\n        animationIndex: 0,\n        current: firstAnimation.current,\n        callback,\n      } as SequenceAnimation;\n    }\n  );\n}\n"],"mappings":"AAAA,SAASA,eAAe;AASxB,OAAO,SAASC,YAAYA,CAAA,EAEI;EAC9B,SAAS;;EAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAFPC,WAAW,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAXF,WAAW,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAGd,OAAOP,eAAe,CACpBK,WAAW,CAAC,CAAC,CAAC,EACd,YAAM;IACJ,SAAS;;IACT,IAAMG,UAAU,GAAGH,WAAW,CAACI,GAAG,CAAE,UAAAC,CAAC,EAAK;MACxC,IAAMC,MAAM,GAAG,OAAOD,CAAC,KAAK,UAAU,GAAGA,CAAC,EAAE,GAAGA,CAAC;MAChDC,MAAM,CAACC,QAAQ,GAAG,KAAK;MACvB,OAAOD,MAAM;IACf,CAAC,CAAC;IACF,IAAME,cAAc,GAAGL,UAAU,CAAC,CAAC,CAAC;IAEpC,IAAMM,QAAQ,GAAI,SAAZA,QAAQA,CAAIF,QAAiB,EAAW;MAC5C,IAAIA,QAAQ,EAAE;QAGZ;MACF;MAEAJ,UAAU,CAACO,OAAO,CAAE,UAAAC,SAAS,EAAK;QAChC,IAAI,OAAOA,SAAS,CAACF,QAAQ,KAAK,UAAU,IAAI,CAACE,SAAS,CAACJ,QAAQ,EAAE;UACnEI,SAAS,CAACF,QAAQ,CAACF,QAAQ,CAAC;QAC9B;MACF,CAAC,CAAC;IACJ,CAAC;IAED,SAASK,QAAQA,CAACD,SAA4B,EAAEE,GAAc,EAAW;MACvE,IAAMC,WAAW,GAAGX,UAAU,CAACQ,SAAS,CAACI,cAAc,CAAC;MACxD,IAAMR,QAAQ,GAAGO,WAAW,CAACE,OAAO,CAACF,WAAW,EAAED,GAAG,CAAC;MACtDF,SAAS,CAACM,OAAO,GAAGH,WAAW,CAACG,OAAO;MACvC,IAAIV,QAAQ,EAAE;QAEZ,IAAIO,WAAW,CAACL,QAAQ,EAAE;UACxBK,WAAW,CAACL,QAAQ,CAAC,IAAK,CAAe;QAC3C;QACAK,WAAW,CAACP,QAAQ,GAAG,IAAI;QAC3BI,SAAS,CAACI,cAAc,IAAI,CAAC;QAC7B,IAAIJ,SAAS,CAACI,cAAc,GAAGZ,UAAU,CAACJ,MAAM,EAAE;UAChD,IAAMmB,QAAQ,GAAGf,UAAU,CAACQ,SAAS,CAACI,cAAc,CAAC;UACrDG,QAAQ,CAACC,OAAO,CAACD,QAAQ,EAAEJ,WAAW,CAACG,OAAO,EAAEJ,GAAG,EAAEC,WAAW,CAAC;UACjE,OAAO,KAAK;QACd;QACA,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;IAEA,SAASK,OAAOA,CACdR,SAA4B,EAC5BS,KAAsB,EACtBP,GAAc,EACdQ,iBAAoC,EAC9B;MACNV,SAAS,CAACI,cAAc,GAAG,CAAC;MAC5B,IAAIM,iBAAiB,KAAKC,SAAS,EAAE;QACnCD,iBAAiB,GAAGlB,UAAU,CAC5BA,UAAU,CAACJ,MAAM,GAAG,CAAC,CACD;MACxB;MACAS,cAAc,CAACW,OAAO,CAACX,cAAc,EAAEY,KAAK,EAAEP,GAAG,EAAEQ,iBAAiB,CAAC;IACvE;IAEA,OAAO;MACLE,aAAa,EAAE,IAAI;MACnBP,OAAO,EAAEJ,QAAQ;MACjBO,OAAO,EAAPA,OAAO;MACPJ,cAAc,EAAE,CAAC;MACjBE,OAAO,EAAET,cAAc,CAACS,OAAO;MAC/BR,QAAA,EAAAA;IACF,CAAC;EACH,CAAC,CACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}