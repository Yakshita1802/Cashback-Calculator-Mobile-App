{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport NativeReanimatedModule from \"./NativeReanimated\";\nimport { shouldBeUseWeb } from \"./PlatformChecker\";\nimport { registerWorkletStackDetails } from \"./errors\";\nimport { jsVersion } from \"./platform-specific/jsVersion\";\nvar USE_STUB_IMPLEMENTATION = shouldBeUseWeb();\nvar _shareableCache = new WeakMap();\nvar _shareableFlag = Symbol('shareable flag');\nvar MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\nfunction isHostObject(value) {\n  return MAGIC_KEY in value;\n}\nexport function registerShareableMapping(shareable, shareableRef) {\n  if (USE_STUB_IMPLEMENTATION) {\n    return;\n  }\n  _shareableCache.set(shareable, shareableRef || _shareableFlag);\n}\nfunction isPlainJSObject(object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\nvar INACCESSIBLE_OBJECT = {\n  __init: function __init() {\n    'worklet';\n\n    return new Proxy({}, {\n      get: function get(_, prop) {\n        if (prop === '_isReanimatedSharedValue') {\n          return false;\n        }\n        throw new Error(`Trying to access property \\`${prop}\\` of an object which cannot be sent to the UI runtime.`);\n      },\n      set: function set() {\n        throw new Error('Trying to write to an object which cannot be sent to the UI runtime.');\n      }\n    });\n  }\n};\nvar DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\nvar processedObjectAtThresholdDepth;\nexport function makeShareableCloneRecursive(value) {\n  var shouldPersistRemote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new Error('Trying to convert a cyclic object to a shareable. This is not supported.');\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n  var type = typeof value;\n  var isTypeObject = type === 'object';\n  var isTypeFunction = type === 'function';\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    var cached = _shareableCache.get(value);\n    if (cached === _shareableFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached;\n    } else {\n      var toAdapt;\n      if (Array.isArray(value)) {\n        toAdapt = value.map(function (element) {\n          return makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1);\n        });\n      } else if (isTypeFunction && value.__workletHash === undefined) {\n        toAdapt = value;\n      } else if (isHostObject(value)) {\n        toAdapt = value;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n        if (value.__workletHash !== undefined) {\n          if (__DEV__) {\n            if (value.__version !== jsVersion) {\n              throw new Error(`[Reanimated] Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${value.__version}). Please clear your Metro bundler cache with \\`yarn start --reset-cache\\`,\n              \\`npm start -- --reset-cache\\` or \\`expo start -c\\` and run the app again.`);\n            }\n            registerWorkletStackDetails(value.__workletHash, value.__stackDetails);\n            delete value.__stackDetails;\n          }\n          toAdapt.__initData = makeShareableCloneRecursive(value.__initData, true, depth + 1);\n          delete value.__initData;\n        }\n        for (var _ref of Object.entries(value)) {\n          var _ref2 = _slicedToArray(_ref, 2);\n          var key = _ref2[0];\n          var element = _ref2[1];\n          toAdapt[key] = makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1);\n        }\n      } else {\n        var inaccessibleObject = makeShareableCloneRecursive(INACCESSIBLE_OBJECT);\n        _shareableCache.set(value, inaccessibleObject);\n        return inaccessibleObject;\n      }\n      if (__DEV__) {\n        Object.freeze(value);\n      }\n      var adopted = NativeReanimatedModule.makeShareableClone(toAdapt, shouldPersistRemote);\n      _shareableCache.set(value, adopted);\n      _shareableCache.set(adopted, _shareableFlag);\n      return adopted;\n    }\n  }\n  return NativeReanimatedModule.makeShareableClone(value, shouldPersistRemote);\n}\nexport function makeShareableCloneOnUIRecursive(value) {\n  'worklet';\n\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  function cloneRecursive(value) {\n    var type = typeof value;\n    if ((type === 'object' || type === 'function') && value !== null) {\n      var toAdapt;\n      if (Array.isArray(value)) {\n        toAdapt = value.map(function (element) {\n          return cloneRecursive(element);\n        });\n      } else if (value !== undefined) {\n        toAdapt = {};\n        for (var _ref3 of Object.entries(value)) {\n          var _ref4 = _slicedToArray(_ref3, 2);\n          var key = _ref4[0];\n          var element = _ref4[1];\n          toAdapt[key] = cloneRecursive(element);\n        }\n      }\n      return _makeShareableClone(toAdapt);\n    }\n    return _makeShareableClone(value);\n  }\n  return cloneRecursive(value);\n}\nexport function makeShareable(value) {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  var handle = makeShareableCloneRecursive({\n    __init: function __init() {\n      'worklet';\n\n      return value;\n    }\n  });\n  registerShareableMapping(value, handle);\n  return value;\n}","map":{"version":3,"names":["NativeReanimatedModule","shouldBeUseWeb","registerWorkletStackDetails","jsVersion","USE_STUB_IMPLEMENTATION","_shareableCache","WeakMap","_shareableFlag","Symbol","MAGIC_KEY","isHostObject","value","registerShareableMapping","shareable","shareableRef","set","isPlainJSObject","object","Object","getPrototypeOf","prototype","INACCESSIBLE_OBJECT","__init","Proxy","get","_","prop","Error","DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD","processedObjectAtThresholdDepth","makeShareableCloneRecursive","shouldPersistRemote","arguments","length","undefined","depth","type","isTypeObject","isTypeFunction","cached","toAdapt","Array","isArray","map","element","__workletHash","__DEV__","__version","__stackDetails","__initData","_ref","entries","_ref2","_slicedToArray","key","inaccessibleObject","freeze","adopted","makeShareableClone","makeShareableCloneOnUIRecursive","cloneRecursive","_ref3","_ref4","_makeShareableClone","makeShareable","handle"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\shareables.ts"],"sourcesContent":["import NativeReanimatedModule from './NativeReanimated';\nimport { ShareableRef } from './commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { registerWorkletStackDetails } from './errors';\nimport { jsVersion } from './platform-specific/jsVersion';\n\n// for web/chrome debugger/jest environments this file provides a stub implementation\n// where no shareable references are used. Instead, the objects themselves are used\n// instead of shareable references, because of the fact that we don't have to deal with\n// runnning the code on separate VMs.\nconst USE_STUB_IMPLEMENTATION = shouldBeUseWeb();\n\nconst _shareableCache = new WeakMap<\n  Record<string, unknown>,\n  ShareableRef<any> | symbol\n>();\n// the below symbol is used to represent a mapping from the value to itself\n// this is used to allow for a converted shareable to be passed to makeShareableClone\nconst _shareableFlag = Symbol('shareable flag');\n\nconst MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value: any): boolean {\n  // We could use JSI to determine whether an object is a host object, however\n  // the below workaround works well and is way faster than an additional JSI call.\n  // We use the fact that host objects have broken implementation of `hasOwnProperty`\n  // and hence return true for all `in` checks regardless of the key we ask for.\n  return MAGIC_KEY in value;\n}\n\nexport function registerShareableMapping(\n  shareable: any,\n  shareableRef?: ShareableRef<any>\n): void {\n  if (USE_STUB_IMPLEMENTATION) {\n    return;\n  }\n  _shareableCache.set(shareable, shareableRef || _shareableFlag);\n}\n\nfunction isPlainJSObject(object: object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\n// The below object is used as a replacement for objects that cannot be transferred\n// as shareable values. In makeShareableCloneRecursive we detect if an object is of\n// a plain Object.prototype and only allow such objects to be transferred. This lets\n// us avoid all sorts of react internals from leaking into the UI runtime. To make it\n// possible to catch errors when someone actually tries to access such object on the UI\n// runtime, we use the below Proxy object which is instantiated on the UI runtime and\n// throws whenever someone tries to access its fields.\nconst INACCESSIBLE_OBJECT = {\n  __init: () => {\n    'worklet';\n    return new Proxy(\n      {},\n      {\n        get: (_: any, prop: string) => {\n          if (prop === '_isReanimatedSharedValue') {\n            // not very happy about this check here, but we need to allow for\n            // \"inaccessible\" objects to be tested with isSharedValue check\n            // as it is being used in the mappers when extracing inputs recursively.\n            // Apparently we can't check if a key exists there as HostObjects always\n            // return true for such tests, so the only possibility for us is to\n            // actually access that key and see if it is set to true. We therefore\n            // need to allow for this key to be accessed here.\n            return false;\n          }\n          throw new Error(\n            `Trying to access property \\`${prop}\\` of an object which cannot be sent to the UI runtime.`\n          );\n        },\n        set: () => {\n          throw new Error(\n            'Trying to write to an object which cannot be sent to the UI runtime.'\n          );\n        },\n      }\n    );\n  },\n};\n\nconst DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\n// Below variable stores object that we process in makeShareableCloneRecursive at the specified depth.\n// We use it to check if later on the function reenters with the same object\nlet processedObjectAtThresholdDepth: any;\n\nexport function makeShareableCloneRecursive<T>(\n  value: any,\n  shouldPersistRemote = false,\n  depth = 0\n): ShareableRef<T> {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    // if we reach certain recursion depth we suspect that we are dealing with a cyclic object.\n    // this type of objects are not supported and cannot be trasferred as shareable, so we\n    // implement a simple detection mechanism that remembers the value at a given depth and\n    // tests whether we try reenter this method later on with the same value. If that happens\n    // we throw an appropriate error.\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new Error(\n        'Trying to convert a cyclic object to a shareable. This is not supported.'\n      );\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n  // This one actually may be worth to be moved to c++, we also need similar logic to run on the UI thread\n  const type = typeof value;\n  const isTypeObject = type === 'object';\n  const isTypeFunction = type === 'function';\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    const cached = _shareableCache.get(value);\n    if (cached === _shareableFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached as ShareableRef<T>;\n    } else {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) =>\n          makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1)\n        );\n      } else if (isTypeFunction && value.__workletHash === undefined) {\n        // this is a remote function\n        toAdapt = value;\n      } else if (isHostObject(value)) {\n        // for host objects we pass the reference to the object as shareable and\n        // then recreate new host object wrapping the same instance on the UI thread.\n        // there is no point of iterating over keys as we do for regular objects.\n        toAdapt = value;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n        if (value.__workletHash !== undefined) {\n          // we are converting a worklet\n          if (__DEV__) {\n            if (value.__version !== jsVersion) {\n              throw new Error(`[Reanimated] Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${value.__version}). Please clear your Metro bundler cache with \\`yarn start --reset-cache\\`,\n              \\`npm start -- --reset-cache\\` or \\`expo start -c\\` and run the app again.`);\n            }\n            registerWorkletStackDetails(\n              value.__workletHash,\n              value.__stackDetails\n            );\n            delete value.__stackDetails;\n          }\n          // to save on transferring static __initData field of worklet structure\n          // we request shareable value to persist its UI counterpart. This means\n          // that the __initData field that contains long strings represeting the\n          // worklet code, source map, and location, will always be\n          // serialized/deserialized once.\n          toAdapt.__initData = makeShareableCloneRecursive(\n            value.__initData,\n            true,\n            depth + 1\n          );\n          delete value.__initData;\n        }\n\n        for (const [key, element] of Object.entries(value)) {\n          toAdapt[key] = makeShareableCloneRecursive(\n            element,\n            shouldPersistRemote,\n            depth + 1\n          );\n        }\n      } else {\n        // This is reached for object types that are not of plain Object.prototype.\n        // We don't support such objects from being transferred as shareables to\n        // the UI runtime and hence we replace them with \"inaccessible object\"\n        // which is implemented as a Proxy object that throws on any attempt\n        // of accessing its fields. We argue that such objects can sometimes leak\n        // as attributes of objects being captured by worklets but should never\n        // be used on the UI runtime regardless. If they are being accessed, the user\n        // will get an appropriate error message.\n        const inaccessibleObject =\n          makeShareableCloneRecursive<T>(INACCESSIBLE_OBJECT);\n        _shareableCache.set(value, inaccessibleObject);\n        return inaccessibleObject;\n      }\n      if (__DEV__) {\n        // we freeze objects that are transformed to shareable. This should help\n        // detect issues when someone modifies data after it's been converted to\n        // shareable. Meaning that they may be doing a faulty assumption in their\n        // code expecting that the updates are going to automatically populate to\n        // the object sent to the UI thread. If the user really wants some objects\n        // to be mutable they should use shared values instead.\n        Object.freeze(value);\n      }\n      const adopted = NativeReanimatedModule.makeShareableClone(\n        toAdapt,\n        shouldPersistRemote\n      );\n      _shareableCache.set(value, adopted);\n      _shareableCache.set(adopted, _shareableFlag);\n      return adopted;\n    }\n  }\n  return NativeReanimatedModule.makeShareableClone(value, shouldPersistRemote);\n}\n\nexport function makeShareableCloneOnUIRecursive<T>(value: T): ShareableRef<T> {\n  'worklet';\n  if (USE_STUB_IMPLEMENTATION) {\n    // @ts-ignore web is an interesting place where we don't run a secondary VM on the UI thread\n    // see more details in the comment where USE_STUB_IMPLEMENTATION is defined.\n    return value;\n  }\n  function cloneRecursive<T>(value: T): ShareableRef<T> {\n    const type = typeof value;\n    if ((type === 'object' || type === 'function') && value !== null) {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) => cloneRecursive(element));\n      } else if (value !== undefined) {\n        toAdapt = {};\n        for (const [key, element] of Object.entries(value)) {\n          toAdapt[key] = cloneRecursive(element);\n        }\n      }\n      return _makeShareableClone(toAdapt);\n    }\n    return _makeShareableClone(value);\n  }\n  return cloneRecursive(value);\n}\n\nexport function makeShareable<T>(value: T): T {\n  if (USE_STUB_IMPLEMENTATION) {\n    return value;\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return value;\n    },\n  });\n  registerShareableMapping(value, handle);\n  return value;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}