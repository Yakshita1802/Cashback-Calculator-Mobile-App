{"ast":null,"code":"import { isValidElementType } from 'react-is';\nimport invariant from \"../utils/invariant\";\nexport default function getScreenForRouteName(routeConfigs, routeName) {\n  var routeConfig = routeConfigs[routeName];\n  if (!routeConfig) {\n    throw new Error(\"There is no route defined for key \".concat(routeName, \".\\n\") + \"Must be one of: \".concat(Object.keys(routeConfigs).map(function (a) {\n      return \"'\".concat(a, \"'\");\n    }).join(',')));\n  }\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n  if (typeof routeConfig.getScreen === 'function') {\n    var screen = routeConfig.getScreen();\n    invariant(isValidElementType(screen), \"The getScreen defined for route '\".concat(routeName, \" didn't return a valid \") + 'screen or navigator.\\n\\n' + 'Please pass it like this:\\n' + \"\".concat(routeName, \": {\\n  getScreen: () => require('./MyScreen').default\\n}\"));\n    return screen;\n  }\n  return routeConfig;\n}","map":{"version":3,"names":["isValidElementType","invariant","getScreenForRouteName","routeConfigs","routeName","routeConfig","Error","concat","Object","keys","map","a","join","screen","getScreen"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-navigation\\node_modules\\@react-navigation\\core\\lib\\module\\routers\\getScreenForRouteName.js"],"sourcesContent":["import { isValidElementType } from 'react-is';\n\nimport invariant from '../utils/invariant';\n\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\nexport default function getScreenForRouteName(routeConfigs, routeName) {\n  const routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(\n      `There is no route defined for key ${routeName}.\\n` +\n        `Must be one of: ${Object.keys(routeConfigs)\n          .map((a) => `'${a}'`)\n          .join(',')}`\n    );\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    const screen = routeConfig.getScreen();\n    invariant(\n      isValidElementType(screen),\n      `The getScreen defined for route '${routeName} didn't return a valid ` +\n        'screen or navigator.\\n\\n' +\n        'Please pass it like this:\\n' +\n        `${routeName}: {\\n  getScreen: () => require('./MyScreen').default\\n}`\n    );\n    return screen;\n  }\n\n  return routeConfig;\n}\n"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,UAAnC;AAEA,OAAOC,SAAP;AAMA,eAAe,SAASC,qBAATA,CAA+BC,YAA/B,EAA6CC,SAA7C,EAAwD;EACrE,IAAMC,WAAW,GAAGF,YAAY,CAACC,SAAD,CAAhC;EAEA,IAAI,CAACC,WAAL,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CACJ,qCAAAC,MAAA,CAAqCH,SAArC,8BAAAG,MAAA,CACqBC,MAAM,CAACC,IAAP,CAAYN,YAAZ,EAChBO,GADgB,CACX,UAAAC,CAAD;MAAA,WAAAJ,MAAA,CAAWI,CAAX,MADY;IAAA,GAEhBC,IAFgB,CAEX,GAFW,CADrB,CADI,CAAN;EAMD;EAED,IAAIP,WAAW,CAACQ,MAAhB,EAAwB;IACtB,OAAOR,WAAW,CAACQ,MAAnB;EACD;EAED,IAAI,OAAOR,WAAW,CAACS,SAAnB,KAAiC,UAArC,EAAiD;IAC/C,IAAMD,MAAM,GAAGR,WAAW,CAACS,SAAZ,EAAf;IACAb,SAAS,CACPD,kBAAkB,CAACa,MAAD,CADX,EAEP,oCAAAN,MAAA,CAAoCH,SAApC,+BACE,0BADF,GAEE,6BAFF,MAAAG,MAAA,CAGKH,SAHL,6DAFO,CAAT;IAOA,OAAOS,MAAP;EACD;EAED,OAAOR,WAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}