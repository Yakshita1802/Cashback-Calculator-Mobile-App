{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContext } from 'react-navigation';\nimport Header from \"./Header\";\nimport { forSlideLeft, forSlideUp, forNoAnimation, forSlideRight } from \"../../TransitionConfigs/HeaderStyleInterpolators\";\nimport PreviousSceneContext from \"../../utils/PreviousSceneContext\";\nexport default function HeaderContainer(_ref) {\n  var mode = _ref.mode,\n    scenes = _ref.scenes,\n    layout = _ref.layout,\n    insets = _ref.insets,\n    getPreviousScene = _ref.getPreviousScene,\n    getFocusedRoute = _ref.getFocusedRoute,\n    onContentHeightChange = _ref.onContentHeightChange,\n    gestureDirection = _ref.gestureDirection,\n    styleInterpolator = _ref.styleInterpolator,\n    style = _ref.style;\n  var focusedRoute = getFocusedRoute();\n  var parentPreviousScene = React.useContext(PreviousSceneContext);\n  return React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: style\n  }, scenes.slice(-3).map(function (scene, i, self) {\n    var _getPreviousScene;\n    if (mode === 'screen' && i !== self.length - 1 || !scene) {\n      return null;\n    }\n    var _ref2 = scene.descriptor.options || {},\n      header = _ref2.header,\n      _ref2$headerShown = _ref2.headerShown,\n      headerShown = _ref2$headerShown === void 0 ? true : _ref2$headerShown,\n      headerTransparent = _ref2.headerTransparent;\n    if (!headerShown) {\n      return null;\n    }\n    var isFocused = focusedRoute.key === scene.route.key;\n    var previous = (_getPreviousScene = getPreviousScene({\n      route: scene.route\n    })) !== null && _getPreviousScene !== void 0 ? _getPreviousScene : parentPreviousScene;\n    var previousScene = self[i - 1];\n    var nextScene = self[i + 1];\n    var _ref3 = (previousScene === null || previousScene === void 0 ? void 0 : previousScene.descriptor.options) || {},\n      _ref3$headerShown = _ref3.headerShown,\n      previousHeaderShown = _ref3$headerShown === void 0 ? true : _ref3$headerShown;\n    var _ref4 = (nextScene === null || nextScene === void 0 ? void 0 : nextScene.descriptor.options) || {},\n      _ref4$headerShown = _ref4.headerShown,\n      nextHeaderShown = _ref4$headerShown === void 0 ? true : _ref4$headerShown;\n    var isHeaderStatic = previousHeaderShown === false && !nextScene || nextHeaderShown === false;\n    var props = {\n      mode: mode,\n      layout: layout,\n      insets: insets,\n      scene: scene,\n      previous: previous,\n      navigation: scene.descriptor.navigation,\n      styleInterpolator: mode === 'float' ? isHeaderStatic ? gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? forSlideUp : gestureDirection === 'horizontal-inverted' ? forSlideRight : forSlideLeft : styleInterpolator : forNoAnimation\n    };\n    return React.createElement(NavigationContext.Provider, {\n      key: scene.route.key,\n      value: scene.descriptor.navigation\n    }, React.createElement(React.Fragment, null, React.createElement(View, {\n      onLayout: onContentHeightChange ? function (e) {\n        var height = e.nativeEvent.layout.height;\n        onContentHeightChange({\n          route: scene.route,\n          height: height\n        });\n      } : undefined,\n      pointerEvents: isFocused ? 'box-none' : 'none',\n      accessibilityElementsHidden: !isFocused,\n      importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n      style: mode === 'float' && !isFocused || headerTransparent ? styles.header : null\n    }, header !== undefined ? header(props) : React.createElement(Header, props))));\n  }));\n}\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"names":["React","Animated","View","StyleSheet","NavigationContext","Header","forSlideLeft","forSlideUp","forNoAnimation","forSlideRight","PreviousSceneContext","HeaderContainer","_ref","mode","scenes","layout","insets","getPreviousScene","getFocusedRoute","onContentHeightChange","gestureDirection","styleInterpolator","style","focusedRoute","parentPreviousScene","useContext","createElement","pointerEvents","slice","map","scene","i","self","_getPreviousScene","length","_ref2","descriptor","options","header","_ref2$headerShown","headerShown","headerTransparent","isFocused","key","route","previous","previousScene","nextScene","_ref3","_ref3$headerShown","previousHeaderShown","_ref4","_ref4$headerShown","nextHeaderShown","isHeaderStatic","props","navigation","Provider","value","Fragment","onLayout","e","height","nativeEvent","undefined","accessibilityElementsHidden","importantForAccessibility","styles","create","position","top","left","right"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-navigation-stack\\lib\\module\\vendor\\views\\Header\\HeaderContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { NavigationContext } from 'react-navigation';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport Header from './Header';\nimport {\n  forSlideLeft,\n  forSlideUp,\n  forNoAnimation,\n  forSlideRight,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\nimport type {\n  Layout,\n  Route,\n  Scene,\n  StackHeaderStyleInterpolator,\n  StackNavigationProp,\n  GestureDirection,\n} from '../../types';\n\nexport type Props = {\n  mode: 'float' | 'screen';\n  layout: Layout;\n  insets: EdgeInsets;\n  scenes: (Scene<Route<string>> | undefined)[];\n  getPreviousScene: (props: {\n    route: Route<string>;\n  }) => Scene<Route<string>> | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  styleInterpolator: StackHeaderStyleInterpolator;\n  gestureDirection: GestureDirection;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  insets,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  gestureDirection,\n  styleInterpolator,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n  const parentPreviousScene = React.useContext(PreviousSceneContext);\n\n  return (\n    <Animated.View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const { header, headerShown = true, headerTransparent } =\n          scene.descriptor.options || {};\n\n        if (!headerShown) {\n          return null;\n        }\n\n        const isFocused = focusedRoute.key === scene.route.key;\n        const previous =\n          getPreviousScene({ route: scene.route }) ?? parentPreviousScene;\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousScene = self[i - 1];\n        const nextScene = self[i + 1];\n\n        const { headerShown: previousHeaderShown = true } =\n          previousScene?.descriptor.options || {};\n\n        const { headerShown: nextHeaderShown = true } =\n          nextScene?.descriptor.options || {};\n\n        const isHeaderStatic =\n          (previousHeaderShown === false &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextScene) ||\n          nextHeaderShown === false;\n\n        const props = {\n          mode,\n          layout,\n          insets,\n          scene,\n          previous,\n          navigation: scene.descriptor.navigation as StackNavigationProp,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? gestureDirection === 'vertical' ||\n                  gestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : gestureDirection === 'horizontal-inverted'\n                  ? forSlideRight\n                  : forSlideLeft\n                : styleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) => {\n                        const { height } = e.nativeEvent.layout;\n\n                        onContentHeightChange({\n                          route: scene.route,\n                          height,\n                        });\n                      }\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {header !== undefined ? header(props) : <Header {...props} />}\n              </View>\n            </>\n          </NavigationContext.Provider>\n        );\n      })}\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}