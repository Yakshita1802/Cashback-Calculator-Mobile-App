{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { processColor } from \"./Colors\";\nimport { makeShareable, isConfigured } from \"./core\";\nimport { _updatePropsJS } from \"./js-reanimated\";\nimport { shouldBeUseWeb } from \"./PlatformChecker\";\nexport var colorProps = ['backgroundColor', 'borderBottomColor', 'borderColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'borderStartColor', 'borderEndColor', 'color', 'shadowColor', 'textDecorationColor', 'tintColor', 'textShadowColor', 'overlayColor'];\nexport var ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\nvar updatePropsByPlatform;\nif (shouldBeUseWeb()) {\n  updatePropsByPlatform = function updatePropsByPlatform(_, updates, maybeViewRef) {\n    'worklet';\n\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach(function (item, _) {\n        _updatePropsJS(updates, item);\n      });\n    }\n  };\n} else {\n  if (global._IS_FABRIC) {\n    updatePropsByPlatform = function updatePropsByPlatform(viewDescriptors, updates, _) {\n      'worklet';\n\n      for (var key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n      viewDescriptors.value.forEach(function (viewDescriptor) {\n        _updatePropsFabric(viewDescriptor.shadowNodeWrapper, updates);\n      });\n    };\n  } else {\n    updatePropsByPlatform = function updatePropsByPlatform(viewDescriptors, updates, _) {\n      'worklet';\n\n      for (var key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n      viewDescriptors.value.forEach(function (viewDescriptor) {\n        _updatePropsPaper(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\n      });\n    };\n  }\n}\nexport var updateProps = updatePropsByPlatform;\nexport var updatePropsJestWrapper = function updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters) {\n  adapters.forEach(function (adapter) {\n    adapter(updates);\n  });\n  animatedStyle.current.value = _objectSpread(_objectSpread({}, animatedStyle.current.value), updates);\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\nexport default updateProps;","map":{"version":3,"names":["processColor","makeShareable","isConfigured","_updatePropsJS","shouldBeUseWeb","colorProps","ColorProperties","updatePropsByPlatform","_","updates","maybeViewRef","items","forEach","item","global","_IS_FABRIC","viewDescriptors","key","indexOf","value","viewDescriptor","_updatePropsFabric","shadowNodeWrapper","_updatePropsPaper","tag","name","updateProps","updatePropsJestWrapper","animatedStyle","adapters","adapter","current","_objectSpread"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\UpdateProps.ts"],"sourcesContent":["/* global _updatePropsPaper _updatePropsFabric */\nimport { MutableRefObject } from 'react';\nimport { processColor } from './Colors';\nimport { AnimatedStyle, SharedValue, StyleProps } from './commonTypes';\nimport { makeShareable, isConfigured } from './core';\nimport { Descriptor } from './hook/commonTypes';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { ViewRefSet } from './ViewDescriptorsSet';\n\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const colorProps = [\n  'backgroundColor',\n  'borderBottomColor',\n  'borderColor',\n  'borderLeftColor',\n  'borderRightColor',\n  'borderTopColor',\n  'borderStartColor',\n  'borderEndColor',\n  'color',\n  'shadowColor',\n  'textDecorationColor',\n  'tintColor',\n  'textShadowColor',\n  'overlayColor',\n];\n\nexport const ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\n\nlet updatePropsByPlatform;\nif (shouldBeUseWeb()) {\n  updatePropsByPlatform = (\n    _: SharedValue<Descriptor[]>,\n    updates: StyleProps | AnimatedStyle,\n    maybeViewRef: ViewRefSet<any> | undefined\n  ): void => {\n    'worklet';\n    if (maybeViewRef) {\n      maybeViewRef.items.forEach((item, _) => {\n        _updatePropsJS(updates, item);\n      });\n    }\n  };\n} else {\n  if (global._IS_FABRIC) {\n    updatePropsByPlatform = (\n      viewDescriptors: SharedValue<Descriptor[]>,\n      updates: StyleProps | AnimatedStyle,\n      _: ViewRefSet<any> | undefined\n    ): void => {\n      'worklet';\n\n      for (const key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n\n      viewDescriptors.value.forEach((viewDescriptor) => {\n        _updatePropsFabric!(viewDescriptor.shadowNodeWrapper, updates);\n      });\n    };\n  } else {\n    updatePropsByPlatform = (\n      viewDescriptors: SharedValue<Descriptor[]>,\n      updates: StyleProps | AnimatedStyle,\n      _: ViewRefSet<any> | undefined\n    ): void => {\n      'worklet';\n\n      for (const key in updates) {\n        if (ColorProperties.indexOf(key) !== -1) {\n          updates[key] = processColor(updates[key]);\n        }\n      }\n      viewDescriptors.value.forEach((viewDescriptor) => {\n        _updatePropsPaper!(\n          viewDescriptor.tag,\n          viewDescriptor.name || 'RCTView',\n          updates\n        );\n      });\n    };\n  }\n}\n\nexport const updateProps: (\n  viewDescriptor: SharedValue<Descriptor[]>,\n  updates: StyleProps | AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined\n) => void = updatePropsByPlatform;\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updates: AnimatedStyle,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animatedStyle: MutableRefObject<AnimatedStyle>,\n  adapters: ((updates: AnimatedStyle) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates, maybeViewRef);\n};\n\nexport default updateProps;\n"],"mappings":";;;AAEA,SAASA,YAAY;AAErB,SAASC,aAAa,EAAEC,YAAY;AAEpC,SAASC,cAAc;AACvB,SAASC,cAAc;AAIvB,OAAO,IAAMC,UAAU,GAAG,CACxB,iBAAiB,EACjB,mBAAmB,EACnB,aAAa,EACb,iBAAiB,EACjB,kBAAkB,EAClB,gBAAgB,EAChB,kBAAkB,EAClB,gBAAgB,EAChB,OAAO,EACP,aAAa,EACb,qBAAqB,EACrB,WAAW,EACX,iBAAiB,EACjB,cAAc,CACf;AAED,OAAO,IAAMC,eAAe,GAAG,CAACJ,YAAY,EAAE,GAAG,EAAE,GAAGD,aAAa,CAACI,UAAU,CAAC;AAE/E,IAAIE,qBAAqB;AACzB,IAAIH,cAAc,EAAE,EAAE;EACpBG,qBAAqB,GAAG,SAAAA,sBACtBC,CAA4B,EAC5BC,OAAmC,EACnCC,YAAyC,EAChC;IACT,SAAS;;IACT,IAAIA,YAAY,EAAE;MAChBA,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,UAACC,IAAI,EAAEL,CAAC,EAAK;QACtCL,cAAc,CAACM,OAAO,EAAEI,IAAI,CAAC;MAC/B,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC,MAAM;EACL,IAAIC,MAAM,CAACC,UAAU,EAAE;IACrBR,qBAAqB,GAAG,SAAAA,sBACtBS,eAA0C,EAC1CP,OAAmC,EACnCD,CAA8B,EACrB;MACT,SAAS;;MAET,KAAK,IAAMS,GAAG,IAAIR,OAAO,EAAE;QACzB,IAAIH,eAAe,CAACY,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;UACvCR,OAAO,CAACQ,GAAG,CAAC,GAAGjB,YAAY,CAACS,OAAO,CAACQ,GAAG,CAAC,CAAC;QAC3C;MACF;MAEAD,eAAe,CAACG,KAAK,CAACP,OAAO,CAAE,UAAAQ,cAAc,EAAK;QAChDC,kBAAkB,CAAED,cAAc,CAACE,iBAAiB,EAAEb,OAAO,CAAC;MAChE,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,MAAM;IACLF,qBAAqB,GAAG,SAAAA,sBACtBS,eAA0C,EAC1CP,OAAmC,EACnCD,CAA8B,EACrB;MACT,SAAS;;MAET,KAAK,IAAMS,GAAG,IAAIR,OAAO,EAAE;QACzB,IAAIH,eAAe,CAACY,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;UACvCR,OAAO,CAACQ,GAAG,CAAC,GAAGjB,YAAY,CAACS,OAAO,CAACQ,GAAG,CAAC,CAAC;QAC3C;MACF;MACAD,eAAe,CAACG,KAAK,CAACP,OAAO,CAAE,UAAAQ,cAAc,EAAK;QAChDG,iBAAiB,CACfH,cAAc,CAACI,GAAG,EAClBJ,cAAc,CAACK,IAAI,IAAI,SAAS,EAChChB,OAAO,CACR;MACH,CAAC,CAAC;IACJ,CAAC;EACH;AACF;AAEA,OAAO,IAAMiB,WAIJ,GAAGnB,qBAAqB;AAEjC,OAAO,IAAMoB,sBAAsB,GAAG,SAAzBA,sBAAsBA,CACjCX,eAA0C,EAC1CP,OAAsB,EACtBC,YAAyC,EACzCkB,aAA8C,EAC9CC,QAA8C,EACrC;EACTA,QAAQ,CAACjB,OAAO,CAAE,UAAAkB,OAAO,EAAK;IAC5BA,OAAO,CAACrB,OAAO,CAAC;EAClB,CAAC,CAAC;EACFmB,aAAa,CAACG,OAAO,CAACZ,KAAK,GAAAa,aAAA,CAAAA,aAAA,KACtBJ,aAAa,CAACG,OAAO,CAACZ,KAAK,GAC3BV,OAAA,CACJ;EAEDiB,WAAW,CAACV,eAAe,EAAEP,OAAO,EAAEC,YAAY,CAAC;AACrD,CAAC;AAED,eAAegB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}