{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport withNavigation from \"./withNavigation\";\nvar EventNameToPropName = {\n  willFocus: 'onWillFocus',\n  didFocus: 'onDidFocus',\n  willBlur: 'onWillBlur',\n  didBlur: 'onDidBlur'\n};\nvar EventNames = Object.keys(EventNameToPropName);\nvar NavigationEvents = function (_React$Component) {\n  _inherits(NavigationEvents, _React$Component);\n  var _super = _createSuper(NavigationEvents);\n  function NavigationEvents() {\n    var _this;\n    _classCallCheck(this, NavigationEvents);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"getPropListener\", function (eventName) {\n      return _this.props[EventNameToPropName[eventName]];\n    });\n    return _this;\n  }\n  _createClass(NavigationEvents, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.subscribeAll();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.navigation !== prevProps.navigation) {\n        this.removeAll();\n        this.subscribeAll();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeAll();\n    }\n  }, {\n    key: \"subscribeAll\",\n    value: function subscribeAll() {\n      var _this2 = this;\n      this.subscriptions = {};\n      EventNames.forEach(function (eventName) {\n        _this2.subscriptions[eventName] = _this2.props.navigation.addListener(eventName, function () {\n          var propListener = _this2.getPropListener(eventName);\n          return propListener && propListener.apply(void 0, arguments);\n        });\n      });\n    }\n  }, {\n    key: \"removeAll\",\n    value: function removeAll() {\n      var _this3 = this;\n      EventNames.forEach(function (eventName) {\n        _this3.subscriptions[eventName].remove();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n  return NavigationEvents;\n}(React.Component);\nexport default withNavigation(NavigationEvents);","map":{"version":3,"names":["React","withNavigation","EventNameToPropName","willFocus","didFocus","willBlur","didBlur","EventNames","Object","keys","NavigationEvents","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","eventName","props","_createClass","key","value","componentDidMount","subscribeAll","componentDidUpdate","prevProps","navigation","removeAll","componentWillUnmount","_this2","subscriptions","forEach","addListener","propListener","getPropListener","_this3","remove","render","Component"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-navigation\\node_modules\\@react-navigation\\core\\lib\\module\\views\\NavigationEvents.js"],"sourcesContent":["import * as React from 'react';\nimport withNavigation from './withNavigation';\n\nconst EventNameToPropName = {\n  willFocus: 'onWillFocus',\n  didFocus: 'onDidFocus',\n  willBlur: 'onWillBlur',\n  didBlur: 'onDidBlur',\n};\n\nconst EventNames = Object.keys(EventNameToPropName);\n\nclass NavigationEvents extends React.Component {\n  componentDidMount() {\n    // We register all navigation listeners on mount to ensure listener stability across re-render\n    // A former implementation was replacing (removing/adding) listeners on all update (if prop provided)\n    // but there were issues (see https://github.com/react-navigation/react-navigation/issues/5058)\n    this.subscribeAll();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.navigation !== prevProps.navigation) {\n      this.removeAll();\n      this.subscribeAll();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeAll();\n  }\n\n  getPropListener = (eventName) => this.props[EventNameToPropName[eventName]];\n\n  subscribeAll() {\n    this.subscriptions = {};\n\n    EventNames.forEach((eventName) => {\n      this.subscriptions[eventName] = this.props.navigation.addListener(\n        eventName,\n        (...args) => {\n          const propListener = this.getPropListener(eventName);\n          return propListener && propListener(...args);\n        }\n      );\n    });\n  }\n\n  removeAll() {\n    EventNames.forEach((eventName) => {\n      this.subscriptions[eventName].remove();\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withNavigation(NavigationEvents);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP;AAEA,IAAMC,mBAAmB,GAAG;EAC1BC,SAAS,EAAE,aADe;EAE1BC,QAAQ,EAAE,YAFgB;EAG1BC,QAAQ,EAAE,YAHgB;EAI1BC,OAAO,EAAE;AAJiB,CAA5B;AAOA,IAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYP,mBAAZ,CAAnB;AAAA,IAEMQ,gBAAN,aAAAC,gBAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAA+C,SAAAA,iBAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,gBAAA;IAAA,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,SAAAY,MAAA,CAAAL,IAAA;IAAAM,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,sBAmB1B,UAAAa,SAAD;MAAA,OAAeb,KAAA,CAAKc,KAAL,CAAW3B,mBAAmB,CAAC0B,SAAD,CAA9B,CAnBY;IAAA;IAAA,OAAAb,KAAA;EAAA;EAAAe,YAAA,CAAApB,gBAAA;IAAAqB,GAAA;IAAAC,KAAA,EAC7C,SAAAC,kBAAA,EAAoB;MAIlB,KAAKC,YAAL;IACD;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,mBAAmBC,SAAD,EAAY;MAC5B,IAAI,KAAKP,KAAL,CAAWQ,UAAX,KAA0BD,SAAS,CAACC,UAAxC,EAAoD;QAClD,KAAKC,SAAL;QACA,KAAKJ,YAAL;MACD;IACF;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAO,qBAAA,EAAuB;MACrB,KAAKD,SAAL;IACD;EAAA;IAAAP,GAAA;IAAAC,KAAA,EAID,SAAAE,aAAA,EAAe;MAAA,IAAAM,MAAA;MACb,KAAKC,aAAL,GAAqB,EAArB;MAEAlC,UAAU,CAACmC,OAAX,CAAoB,UAAAd,SAAD,EAAe;QAChCY,MAAA,CAAKC,aAAL,CAAmBb,SAAnB,IAAgCY,MAAA,CAAKX,KAAL,CAAWQ,UAAX,CAAsBM,WAAtB,CAC9Bf,SAD8B,EAE9B,YAAa;UACX,IAAMgB,YAAY,GAAGJ,MAAA,CAAKK,eAAL,CAAqBjB,SAArB,CAArB;UACA,OAAOgB,YAAY,IAAIA,YAAY,CAAApB,KAAA,SAAAN,SAAA,CAAnC;QACD,CAL6B,CAAhC;MAOD,CARD;IASD;EAAA;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAM,UAAA,EAAY;MAAA,IAAAQ,MAAA;MACVvC,UAAU,CAACmC,OAAX,CAAoB,UAAAd,SAAD,EAAe;QAChCkB,MAAA,CAAKL,aAAL,CAAmBb,SAAnB,EAA8BmB,MAA9B;MACD,CAFD;IAGD;EAAA;IAAAhB,GAAA;IAAAC,KAAA,EAED,SAAAgB,OAAA,EAAS;MACP,OAAO,IAAP;IACD;EAAA;EAAA,OAAAtC,gBAAA;AAAA,EA3C4BV,KAAK,CAACiD,SAArC;AA8CA,eAAehD,cAAc,CAACS,gBAAD,CAA7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}