{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { db } from \"../firebaseConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddCard() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedIssuer = _useState2[0],\n    setSelectedIssuer = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cards = _useState4[0],\n    setCards = _useState4[1];\n  useEffect(function () {\n    if (selectedIssuer) {\n      var fetchCardsForIssuer = function () {\n        var _ref = _asyncToGenerator(function* () {\n          try {\n            var cardsCollection = db.collection('cards');\n            var query = cardsCollection.where('Issuer', '==', selectedIssuer);\n            var snapshot = yield query.get();\n            var cardData = [];\n            snapshot.forEach(function (doc) {\n              cardData.push(doc.data());\n            });\n            setCards(cardData);\n          } catch (error) {\n            console.error('Error fetching cards:', error);\n          }\n        });\n        return function fetchCardsForIssuer() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      fetchCardsForIssuer();\n    }\n  }, [selectedIssuer]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Add a Card:\"\n    }), _jsx(CardIssuerSelector, {\n      onSelectIssuer: setSelectedIssuer\n    }), selectedIssuer && _jsxs(View, {\n      style: styles.cardListContainer,\n      children: [_jsxs(Text, {\n        style: styles.cardListTitle,\n        children: [\"Cards from \", selectedIssuer, \":\"]\n      }), _jsx(FlatList, {\n        data: cards,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsxs(View, {\n            style: styles.card,\n            children: [_jsxs(Text, {\n              children: [\"Card Name: \", item['Card Name']]\n            }), _jsxs(Text, {\n              children: [\"Issuer: \", item['Issuer']]\n            })]\n          });\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: 'lightgray'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  cardListContainer: {\n    marginTop: 20\n  },\n  cardListTitle: {\n    fontSize: 20,\n    marginBottom: 10\n  },\n  card: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    padding: 16,\n    marginVertical: 8,\n    borderRadius: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","TouchableOpacity","StyleSheet","db","jsx","_jsx","jsxs","_jsxs","AddCard","_useState","_useState2","_slicedToArray","selectedIssuer","setSelectedIssuer","_useState3","_useState4","cards","setCards","fetchCardsForIssuer","_ref","_asyncToGenerator","cardsCollection","collection","query","where","snapshot","get","cardData","forEach","doc","push","data","error","console","apply","arguments","style","styles","container","children","title","CardIssuerSelector","onSelectIssuer","cardListContainer","cardListTitle","keyExtractor","item","index","toString","renderItem","_ref2","card","create","flex","padding","backgroundColor","fontSize","marginBottom","marginTop","borderWidth","borderColor","marginVertical","borderRadius"],"sources":["/Users/yakshita/MobileApp/components/AddCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet } from 'react-native';\nimport { db } from '../firebaseConfig';\n\nexport default function AddCard() {\n  const [selectedIssuer, setSelectedIssuer] = useState('');\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    if (selectedIssuer) {\n      const fetchCardsForIssuer = async () => {\n        try {\n          const cardsCollection = db.collection('cards'); // Replace 'cards' with your collection name\n          const query = cardsCollection.where('Issuer', '==', selectedIssuer);\n          const snapshot = await query.get();\n\n          const cardData = [];\n          snapshot.forEach((doc) => {\n            cardData.push(doc.data());\n          });\n\n          setCards(cardData);\n        } catch (error) {\n          console.error('Error fetching cards:', error);\n        }\n      };\n\n      fetchCardsForIssuer();\n    }\n  }, [selectedIssuer]);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Add a Card:</Text>\n\n      <CardIssuerSelector onSelectIssuer={setSelectedIssuer} />\n\n      {selectedIssuer && (\n        <View style={styles.cardListContainer}>\n          <Text style={styles.cardListTitle}>Cards from {selectedIssuer}:</Text>\n          <FlatList\n            data={cards}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({ item }) => (\n              <View style={styles.card}>\n                <Text>Card Name: {item['Card Name']}</Text>\n                <Text>Issuer: {item['Issuer']}</Text>\n                {/* Include other card data fields here */}\n              </View>\n            )}\n          />\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: 'lightgray',\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  cardListContainer: {\n    marginTop: 20,\n  },\n  cardListTitle: {\n    fontSize: 20,\n    marginBottom: 10,\n  },\n  card: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    padding: 16,\n    marginVertical: 8,\n    borderRadius: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}