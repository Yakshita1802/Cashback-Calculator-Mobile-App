{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport invariant from \"../utils/invariant\";\nimport getScreenForRouteName from \"./getScreenForRouteName\";\nimport validateScreenOptions from \"./validateScreenOptions\";\nfunction applyConfig(configurer, navigationOptions, configProps) {\n  if (typeof configurer === 'function') {\n    return _objectSpread(_objectSpread({}, navigationOptions), configurer(_objectSpread(_objectSpread({}, configProps), {}, {\n      navigationOptions: navigationOptions\n    })));\n  }\n  if (typeof configurer === 'object') {\n    return _objectSpread(_objectSpread({}, navigationOptions), configurer);\n  }\n  return navigationOptions;\n}\nexport default (function (routeConfigs, navigatorScreenConfig) {\n  return function (navigation, screenProps, theme) {\n    var state = navigation.state;\n    var route = state;\n    invariant(route.routeName && typeof route.routeName === 'string', 'Cannot get config because the route does not have a routeName.');\n    var Component = getScreenForRouteName(routeConfigs, route.routeName);\n    var routeConfig = routeConfigs[route.routeName];\n    var routeScreenConfig = routeConfig === Component ? null : routeConfig.navigationOptions;\n    var componentScreenConfig = Component.navigationOptions;\n    var configOptions = {\n      navigation: navigation,\n      screenProps: screenProps || {},\n      theme: theme\n    };\n    var outputConfig = applyConfig(navigatorScreenConfig, {}, configOptions);\n    outputConfig = applyConfig(componentScreenConfig, outputConfig, configOptions);\n    outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);\n    validateScreenOptions(outputConfig, route);\n    return outputConfig;\n  };\n});","map":{"version":3,"names":["invariant","getScreenForRouteName","validateScreenOptions","applyConfig","configurer","navigationOptions","configProps","_objectSpread","routeConfigs","navigatorScreenConfig","navigation","screenProps","theme","state","route","routeName","Component","routeConfig","routeScreenConfig","componentScreenConfig","configOptions","outputConfig"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-navigation\\node_modules\\@react-navigation\\core\\lib\\module\\routers\\createConfigGetter.js"],"sourcesContent":["import invariant from '../utils/invariant';\n\nimport getScreenForRouteName from './getScreenForRouteName';\nimport validateScreenOptions from './validateScreenOptions';\n\nfunction applyConfig(configurer, navigationOptions, configProps) {\n  if (typeof configurer === 'function') {\n    return {\n      ...navigationOptions,\n      ...configurer({\n        ...configProps,\n        navigationOptions,\n      }),\n    };\n  }\n  if (typeof configurer === 'object') {\n    return {\n      ...navigationOptions,\n      ...configurer,\n    };\n  }\n  return navigationOptions;\n}\n\nexport default (routeConfigs, navigatorScreenConfig) => (\n  navigation,\n  screenProps,\n  theme\n) => {\n  const { state } = navigation;\n  const route = state;\n\n  invariant(\n    route.routeName && typeof route.routeName === 'string',\n    'Cannot get config because the route does not have a routeName.'\n  );\n\n  const Component = getScreenForRouteName(routeConfigs, route.routeName);\n\n  const routeConfig = routeConfigs[route.routeName];\n\n  const routeScreenConfig =\n    routeConfig === Component ? null : routeConfig.navigationOptions;\n  const componentScreenConfig = Component.navigationOptions;\n\n  const configOptions = { navigation, screenProps: screenProps || {}, theme };\n\n  let outputConfig = applyConfig(navigatorScreenConfig, {}, configOptions);\n  outputConfig = applyConfig(\n    componentScreenConfig,\n    outputConfig,\n    configOptions\n  );\n  outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);\n\n  validateScreenOptions(outputConfig, route);\n\n  return outputConfig;\n};\n"],"mappings":";;;AAAA,OAAOA,SAAP;AAEA,OAAOC,qBAAP;AACA,OAAOC,qBAAP;AAEA,SAASC,WAATA,CAAqBC,UAArB,EAAiCC,iBAAjC,EAAoDC,WAApD,EAAiE;EAC/D,IAAI,OAAOF,UAAP,KAAsB,UAA1B,EAAsC;IACpC,OAAAG,aAAA,CAAAA,aAAA,KACKF,iBADE,GAEFD,UAAU,CAAAG,aAAA,CAAAA,aAAA,KACRD,WADS;MAEZD,iBAAA,EAAAA;IAAA,EAFW;EAKhB;EACD,IAAI,OAAOD,UAAP,KAAsB,QAA1B,EAAoC;IAClC,OAAAG,aAAA,CAAAA,aAAA,KACKF,iBADE,GAEFD,UAAA;EAEN;EACD,OAAOC,iBAAP;AACD;AAED,gBAAe,UAACG,YAAD,EAAeC,qBAAf;EAAA,OAAyC,UACtDC,UADsD,EAEtDC,WAFsD,EAGtDC,KAHsD,EAInD;IACH,IAAQC,KAAA,GAAUH,UAAlB,CAAQG,KAAA;IACR,IAAMC,KAAK,GAAGD,KAAd;IAEAb,SAAS,CACPc,KAAK,CAACC,SAAN,IAAmB,OAAOD,KAAK,CAACC,SAAb,KAA2B,QADvC,EAEP,gEAFO,CAAT;IAKA,IAAMC,SAAS,GAAGf,qBAAqB,CAACO,YAAD,EAAeM,KAAK,CAACC,SAArB,CAAvC;IAEA,IAAME,WAAW,GAAGT,YAAY,CAACM,KAAK,CAACC,SAAP,CAAhC;IAEA,IAAMG,iBAAiB,GACrBD,WAAW,KAAKD,SAAhB,GAA4B,IAA5B,GAAmCC,WAAW,CAACZ,iBADjD;IAEA,IAAMc,qBAAqB,GAAGH,SAAS,CAACX,iBAAxC;IAEA,IAAMe,aAAa,GAAG;MAAEV,UAAF,EAAEA,UAAF;MAAcC,WAAW,EAAEA,WAAW,IAAI,EAA1C;MAA8CC,KAAA,EAAAA;IAA9C,CAAtB;IAEA,IAAIS,YAAY,GAAGlB,WAAW,CAACM,qBAAD,EAAwB,EAAxB,EAA4BW,aAA5B,CAA9B;IACAC,YAAY,GAAGlB,WAAW,CACxBgB,qBADwB,EAExBE,YAFwB,EAGxBD,aAHwB,CAA1B;IAKAC,YAAY,GAAGlB,WAAW,CAACe,iBAAD,EAAoBG,YAApB,EAAkCD,aAAlC,CAA1B;IAEAlB,qBAAqB,CAACmB,YAAD,EAAeP,KAAf,CAArB;IAEA,OAAOO,YAAP;EACD,CAlCD;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}