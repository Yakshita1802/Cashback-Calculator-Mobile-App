{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Profile() {\n  var navigation = useNavigation();\n  var _useState = useState('user@example.com'),\n    _useState2 = _slicedToArray(_useState, 2),\n    userEmail = _useState2[0],\n    setUserEmail = _useState2[1];\n  var handleLogout = function handleLogout() {\n    navigation.navigate('Login');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [\"User Email: \", userEmail]\n    }), _jsx(Button, {\n      title: \"Logout\",\n      onPress: handleLogout\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","useNavigation","jsxs","_jsxs","jsx","_jsx","Profile","navigation","_useState","_useState2","_slicedToArray","userEmail","setUserEmail","handleLogout","navigate","style","styles","container","children","title","onPress","create","flex","alignItems","justifyContent","padding"],"sources":["/Users/yakshita/MobileApp/components/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function Profile() {\n  const navigation = useNavigation();\n  const [userEmail, setUserEmail] = useState('user@example.com');\n\n  const handleLogout = () => {\n    // Implement your logout logic here\n    // For example, clearing user data and navigating to the login screen\n    // You can use AsyncStorage or a state management library for user data\n    navigation.navigate('Login'); // Navigate to the Login screen after logout\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>User Email: {userEmail}</Text>\n      <Button title=\"Logout\" onPress={handleLogout} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEzD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAClC,IAAAO,SAAA,GAAkCZ,QAAQ,CAAC,kBAAkB,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvDG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IAIzBN,UAAU,CAACO,QAAQ,CAAC,OAAO,CAAC;EAC9B,CAAC;EAED,OACEX,KAAA,CAACN,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bf,KAAA,CAACL,IAAI;MAAAoB,QAAA,GAAC,cAAY,EAACP,SAAS;IAAA,CAAO,CAAC,EACpCN,IAAA,CAACN,MAAM;MAACoB,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAEP;IAAa,CAAE,CAAC;EAAA,CAC5C,CAAC;AAEX;AAEA,IAAMG,MAAM,GAAGhB,UAAU,CAACqB,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}