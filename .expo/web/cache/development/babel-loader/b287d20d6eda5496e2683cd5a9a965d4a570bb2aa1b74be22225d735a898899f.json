{"ast":null,"code":"import { defineAnimation } from \"./util\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport function withDecay(userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(0, function () {\n    'worklet';\n\n    var _config$velocity;\n    var config = {\n      deceleration: 0.998,\n      velocityFactor: 1,\n      velocity: 0,\n      rubberBandFactor: 0.6\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(function (key) {\n        return config[key] = userConfig[key];\n      });\n    }\n    var VELOCITY_EPS = Platform.OS !== 'web' ? 1 : 1 / 20;\n    var SLOPE_FACTOR = 0.1;\n    var decay;\n    if (config.rubberBandEffect) {\n      decay = function decay(animation, now) {\n        var lastTimestamp = animation.lastTimestamp,\n          startTimestamp = animation.startTimestamp,\n          current = animation.current,\n          initialVelocity = animation.initialVelocity,\n          velocity = animation.velocity;\n        var deltaTime = Math.min(now - lastTimestamp, 64);\n        var clampIndex = initialVelocity > 0 ? 1 : 0;\n        var derivative = 0;\n        if (current < config.clamp[0] || current > config.clamp[1]) {\n          derivative = current - config.clamp[clampIndex];\n        }\n        if (derivative !== 0) {\n          animation.springActive = true;\n        } else if (derivative === 0 && animation.springActive) {\n          animation.current = config.clamp[clampIndex];\n          return true;\n        }\n        var v = velocity * Math.exp(-(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR) - derivative * config.rubberBandFactor;\n        animation.current = current + v * config.velocityFactor * deltaTime / 1000;\n        animation.velocity = v;\n        animation.lastTimestamp = now;\n        return false;\n      };\n    } else {\n      decay = function decay(animation, now) {\n        var lastTimestamp = animation.lastTimestamp,\n          startTimestamp = animation.startTimestamp,\n          initialVelocity = animation.initialVelocity,\n          current = animation.current,\n          velocity = animation.velocity;\n        var deltaTime = Math.min(now - lastTimestamp, 64);\n        var v = velocity * Math.exp(-(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR);\n        animation.current = current + v * config.velocityFactor * deltaTime / 1000;\n        animation.velocity = v;\n        animation.lastTimestamp = now;\n        if (config.clamp) {\n          if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n            animation.current = config.clamp[0];\n            return true;\n          } else if (initialVelocity > 0 && animation.current >= config.clamp[1]) {\n            animation.current = config.clamp[1];\n            return true;\n          }\n        }\n        return Math.abs(v) < VELOCITY_EPS;\n      };\n    }\n    function validateConfig() {\n      if (config.clamp) {\n        if (!Array.isArray(config.clamp)) {\n          throw Error(`config.clamp must be an array but is ${typeof config.clamp}`);\n        }\n        if (config.clamp.length !== 2) {\n          throw Error(`clamp array must contain 2 items but is given ${config.clamp.length}`);\n        }\n      }\n      if (config.velocityFactor <= 0) {\n        throw Error(`config.velocityFactor must be greather then 0 but is ${config.velocityFactor}`);\n      }\n      if (config.rubberBandEffect && !config.clamp) {\n        throw Error('You need to set `clamp` property when using `rubberBandEffect`.');\n      }\n    }\n    function onStart(animation, value, now) {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.startTimestamp = now;\n      animation.initialVelocity = config.velocity;\n      validateConfig();\n    }\n    return {\n      onFrame: decay,\n      onStart: onStart,\n      callback: callback,\n      velocity: (_config$velocity = config.velocity) != null ? _config$velocity : 0,\n      initialVelocity: 0,\n      current: 0,\n      lastTimestamp: 0,\n      startTimestamp: 0\n    };\n  });\n}","map":{"version":3,"names":["defineAnimation","Platform","withDecay","userConfig","callback","_config$velocity","config","deceleration","velocityFactor","velocity","rubberBandFactor","Object","keys","forEach","key","VELOCITY_EPS","OS","SLOPE_FACTOR","decay","rubberBandEffect","animation","now","lastTimestamp","startTimestamp","current","initialVelocity","deltaTime","Math","min","clampIndex","derivative","clamp","springActive","v","exp","abs","validateConfig","Array","isArray","Error","length","onStart","value","onFrame"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\animation\\decay.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport {\n  Animation,\n  AnimationCallback,\n  AnimationObject,\n  AnimatableValue,\n  Timestamp,\n} from '../commonTypes';\nimport { Platform } from 'react-native';\n\ninterface DecayConfig {\n  deceleration?: number;\n  velocityFactor?: number;\n  clamp?: number[];\n  velocity?: number;\n}\n\ninterface DefaultDecayConfig {\n  deceleration: number;\n  velocityFactor: number;\n  clamp?: number[];\n  velocity: number;\n  rubberBandEffect?: boolean;\n  rubberBandFactor: number;\n}\n\nexport interface DecayAnimation extends Animation<DecayAnimation> {\n  lastTimestamp: Timestamp;\n  startTimestamp: Timestamp;\n  initialVelocity: number;\n  velocity: number;\n  current: AnimatableValue;\n}\n\nexport interface InnerDecayAnimation\n  extends Omit<DecayAnimation, 'current'>,\n    AnimationObject {\n  current: number;\n}\n\nexport function withDecay(\n  userConfig: DecayConfig,\n  callback?: AnimationCallback\n): Animation<DecayAnimation> {\n  'worklet';\n\n  return defineAnimation<DecayAnimation>(0, () => {\n    'worklet';\n    const config: DefaultDecayConfig = {\n      deceleration: 0.998,\n      velocityFactor: 1,\n      velocity: 0,\n      rubberBandFactor: 0.6,\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(\n        (key) =>\n          ((config as any)[key] = userConfig[key as keyof typeof userConfig])\n      );\n    }\n\n    const VELOCITY_EPS = Platform.OS !== 'web' ? 1 : 1 / 20;\n    const SLOPE_FACTOR = 0.1;\n\n    let decay: (animation: InnerDecayAnimation, now: number) => boolean;\n\n    if (config.rubberBandEffect) {\n      decay = (animation: InnerDecayAnimation, now: number): boolean => {\n        const {\n          lastTimestamp,\n          startTimestamp,\n          current,\n          initialVelocity,\n          velocity,\n        } = animation;\n\n        const deltaTime = Math.min(now - lastTimestamp, 64);\n        const clampIndex = initialVelocity > 0 ? 1 : 0;\n        let derivative = 0;\n        if (current < config.clamp![0] || current > config.clamp![1]) {\n          derivative = current - config.clamp![clampIndex];\n        }\n\n        if (derivative !== 0) {\n          animation.springActive = true;\n        } else if (derivative === 0 && animation.springActive) {\n          animation.current = config.clamp![clampIndex];\n          return true;\n        }\n\n        const v =\n          velocity *\n            Math.exp(\n              -(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR\n            ) -\n          derivative * config.rubberBandFactor;\n\n        animation.current =\n          current + (v * config.velocityFactor * deltaTime) / 1000;\n        animation.velocity = v;\n        animation.lastTimestamp = now;\n        return false;\n      };\n    } else {\n      decay = (animation: InnerDecayAnimation, now: number): boolean => {\n        const {\n          lastTimestamp,\n          startTimestamp,\n          initialVelocity,\n          current,\n          velocity,\n        } = animation;\n\n        const deltaTime = Math.min(now - lastTimestamp, 64);\n        const v =\n          velocity *\n          Math.exp(\n            -(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR\n          );\n        animation.current =\n          current + (v * config.velocityFactor * deltaTime) / 1000;\n        animation.velocity = v;\n        animation.lastTimestamp = now;\n\n        if (config.clamp) {\n          if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n            animation.current = config.clamp[0];\n            return true;\n          } else if (\n            initialVelocity > 0 &&\n            animation.current >= config.clamp[1]\n          ) {\n            animation.current = config.clamp[1];\n            return true;\n          }\n        }\n\n        return Math.abs(v) < VELOCITY_EPS;\n      };\n    }\n\n    function validateConfig(): void {\n      if (config.clamp) {\n        if (!Array.isArray(config.clamp)) {\n          throw Error(\n            `config.clamp must be an array but is ${typeof config.clamp}`\n          );\n        }\n        if (config.clamp.length !== 2) {\n          throw Error(\n            `clamp array must contain 2 items but is given ${config.clamp.length}`\n          );\n        }\n      }\n      if (config.velocityFactor <= 0) {\n        throw Error(\n          `config.velocityFactor must be greather then 0 but is ${config.velocityFactor}`\n        );\n      }\n      if (config.rubberBandEffect && !config.clamp) {\n        throw Error(\n          'You need to set `clamp` property when using `rubberBandEffect`.'\n        );\n      }\n    }\n\n    function onStart(\n      animation: DecayAnimation,\n      value: number,\n      now: Timestamp\n    ): void {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.startTimestamp = now;\n      animation.initialVelocity = config.velocity;\n      validateConfig();\n    }\n\n    return {\n      onFrame: decay,\n      onStart,\n      callback,\n      velocity: config.velocity ?? 0,\n      initialVelocity: 0,\n      current: 0,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n    } as DecayAnimation;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}