{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"navigation\", \"screenProps\", \"persistNavigationState\", \"loadNavigationState\", \"theme\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { NavigationActions, ThemeProvider, pathUtils, getNavigation, NavigationProvider } from '@react-navigation/core';\nimport invariant from \"./utils/invariant\";\nimport docsUrl from \"./utils/docsUrl\";\nvar urlToPathAndParams = pathUtils.urlToPathAndParams;\nfunction isStateful(props) {\n  return !props.navigation;\n}\nfunction validateProps(props) {\n  if (props.persistenceKey) {\n    console.warn('You passed persistenceKey prop to a navigator. ' + 'The persistenceKey prop was replaced by a more flexible persistence mechanism, ' + 'please see the navigation state persistence docs for more information. ' + 'Passing the persistenceKey prop is a no-op.');\n  }\n  if (isStateful(props)) {\n    return;\n  }\n  var navigation = props.navigation,\n    screenProps = props.screenProps,\n    persistNavigationState = props.persistNavigationState,\n    loadNavigationState = props.loadNavigationState,\n    theme = props.theme,\n    containerProps = _objectWithoutProperties(props, _excluded);\n  var keys = Object.keys(containerProps);\n  if (keys.length !== 0) {\n    throw new Error('This navigator has both navigation and container props, so it is ' + \"unclear if it should own its own state. Remove props: \\\"\".concat(keys.join(', '), \"\\\" \") + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');\n  }\n  invariant(persistNavigationState === undefined && loadNavigationState === undefined || typeof persistNavigationState === 'function' && typeof loadNavigationState === 'function', 'both persistNavigationState and loadNavigationState must either be undefined, or be functions');\n}\nvar _statefulContainerCount = 0;\nexport function _TESTING_ONLY_reset_container_count() {\n  _statefulContainerCount = 0;\n}\nvar _reactNavigationIsHydratingState = false;\nexport default function createNavigationContainer(Component) {\n  var NavigationContainer = function (_React$Component) {\n    _inherits(NavigationContainer, _React$Component);\n    var _super = _createSuper(NavigationContainer);\n    function NavigationContainer(props) {\n      var _this;\n      _classCallCheck(this, NavigationContainer);\n      _this = _super.call(this, props);\n      _defineProperty(_assertThisInitialized(_this), \"subs\", null);\n      _defineProperty(_assertThisInitialized(_this), \"_actionEventSubscribers\", new Set());\n      _defineProperty(_assertThisInitialized(_this), \"_handleOpenURL\", function (_ref) {\n        var url = _ref.url;\n        var _this$props = _this.props,\n          enableURLHandling = _this$props.enableURLHandling,\n          uriPrefix = _this$props.uriPrefix;\n        if (enableURLHandling === false) {\n          return;\n        }\n        var parsedUrl = urlToPathAndParams(url, uriPrefix);\n        if (parsedUrl) {\n          var path = parsedUrl.path,\n            params = parsedUrl.params;\n          var action = Component.router.getActionForPathAndParams(path, params);\n          if (action) {\n            _this.dispatch(action);\n          }\n        }\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_persistNavigationState\", function () {\n        var _ref2 = _asyncToGenerator(function* (nav) {\n          var persistNavigationState = _this.props.persistNavigationState;\n          if (persistNavigationState) {\n            try {\n              yield persistNavigationState(nav);\n            } catch (err) {\n              console.warn('Uncaught exception while calling persistNavigationState()! You should handle exceptions thrown from persistNavigationState(), ignoring them may result in undefined behavior.');\n            }\n          }\n        });\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      _defineProperty(_assertThisInitialized(_this), \"dispatch\", function (action) {\n        if (_this.props.navigation) {\n          return _this.props.navigation.dispatch(action);\n        }\n        _this._navState = _this._navState || _this.state.nav;\n        var lastNavState = _this._navState;\n        invariant(lastNavState, 'should be set in constructor if stateful');\n        var reducedState = Component.router.getStateForAction(action, lastNavState);\n        var navState = reducedState === null ? lastNavState : reducedState;\n        var dispatchActionEvents = function dispatchActionEvents() {\n          _this._actionEventSubscribers.forEach(function (subscriber) {\n            return subscriber({\n              type: 'action',\n              action: action,\n              state: navState,\n              lastState: lastNavState\n            });\n          });\n        };\n        if (reducedState === null) {\n          dispatchActionEvents();\n          return true;\n        }\n        if (navState !== lastNavState) {\n          _this._navState = navState;\n          _this.setState({\n            nav: navState\n          }, function () {\n            _this._onNavigationStateChange(lastNavState, navState, action);\n            dispatchActionEvents();\n            _this._persistNavigationState(navState);\n          });\n          return true;\n        }\n        dispatchActionEvents();\n        return false;\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_getScreenProps\", function () {\n        return _this.props.screenProps;\n      });\n      _defineProperty(_assertThisInitialized(_this), \"_getTheme\", function () {\n        if (_this.props.theme === 'light' || _this.props.theme === 'dark') {\n          return _this.props.theme;\n        } else if (_this.props.theme === 'no-preference') {\n          return 'light';\n        } else {\n          console.warn(\"Invalid theme provided: \".concat(_this.props.theme, \". Only 'light' and 'dark' are supported. Falling back to 'light'\"));\n          return 'light';\n        }\n      });\n      validateProps(props);\n      _this._initialAction = NavigationActions.init();\n      if (_this._isStateful() && BackHandler && typeof BackHandler.addEventListener === 'function') {\n        _this.subs = BackHandler.addEventListener('hardwareBackPress', function () {\n          if (!_this._isMounted) {\n            _this.subs && _this.subs.remove();\n          } else {\n            return _this.dispatch(NavigationActions.back());\n          }\n        });\n      }\n      _this.state = {\n        nav: _this._isStateful() && !props.loadNavigationState ? Component.router.getStateForAction(_this._initialAction) : null\n      };\n      return _this;\n    }\n    _createClass(NavigationContainer, [{\n      key: \"_renderLoading\",\n      value: function _renderLoading() {\n        return this.props.renderLoadingExperimental ? this.props.renderLoadingExperimental() : null;\n      }\n    }, {\n      key: \"_isStateful\",\n      value: function _isStateful() {\n        return isStateful(this.props);\n      }\n    }, {\n      key: \"_onNavigationStateChange\",\n      value: function _onNavigationStateChange(prevNav, nav, action) {\n        if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful() && !!process.env.REACT_NAV_LOGGING) {\n          if (console.group) {\n            console.group('Navigation Dispatch: ');\n            console.log('Action: ', action);\n            console.log('New State: ', nav);\n            console.log('Last State: ', prevNav);\n            console.groupEnd();\n          } else {\n            console.log('Navigation Dispatch: ', {\n              action: action,\n              newState: nav,\n              lastState: prevNav\n            });\n          }\n          return;\n        }\n        if (typeof this.props.onNavigationStateChange === 'function') {\n          this.props.onNavigationStateChange(prevNav, nav, action);\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        if (this._navState === this.state.nav) {\n          this._navState = null;\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function () {\n        var _componentDidMount = _asyncToGenerator(function* () {\n          var _this2 = this;\n          this._isMounted = true;\n          if (!this._isStateful()) {\n            return;\n          }\n          if (process.env.NODE_ENV !== 'production' && !this.props.detached) {\n            if (_statefulContainerCount > 0) {\n              if (Platform.OS === 'ios') {\n                console.warn(\"You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: \".concat(docsUrl('common-mistakes.html#explicitly-rendering-more-than-one-navigator')));\n              }\n            }\n          }\n          _statefulContainerCount++;\n          this._linkingSub = Linking.addEventListener('url', this._handleOpenURL);\n          var parsedUrl = null;\n          var userProvidedStartupState = null;\n          if (this.props.enableURLHandling !== false) {\n            var _yield$this$getStartu = yield this.getStartupParams();\n            parsedUrl = _yield$this$getStartu.parsedUrl;\n            userProvidedStartupState = _yield$this$getStartu.userProvidedStartupState;\n          }\n          var action = this._initialAction;\n          var startupState = this.state.nav;\n          if (!startupState && !userProvidedStartupState) {\n            !!process.env.REACT_NAV_LOGGING && console.log('Init new Navigation State');\n            startupState = Component.router.getStateForAction(action);\n          }\n          if (userProvidedStartupState) {\n            startupState = userProvidedStartupState;\n            _reactNavigationIsHydratingState = true;\n          }\n          if (parsedUrl) {\n            var _parsedUrl = parsedUrl,\n              path = _parsedUrl.path,\n              params = _parsedUrl.params;\n            var urlAction = Component.router.getActionForPathAndParams(path, params);\n            if (urlAction) {\n              !!process.env.REACT_NAV_LOGGING && console.log('Applying Navigation Action for Initial URL:', parsedUrl);\n              action = urlAction;\n              startupState = Component.router.getStateForAction(urlAction, startupState);\n            }\n          }\n          var dispatchActions = function dispatchActions() {\n            return _this2._actionEventSubscribers.forEach(function (subscriber) {\n              return subscriber({\n                type: 'action',\n                action: action,\n                state: _this2.state.nav,\n                lastState: null\n              });\n            });\n          };\n          if (startupState === this.state.nav) {\n            dispatchActions();\n            return;\n          }\n          this.setState({\n            nav: startupState\n          }, function () {\n            _reactNavigationIsHydratingState = false;\n            dispatchActions();\n          });\n        });\n        function componentDidMount() {\n          return _componentDidMount.apply(this, arguments);\n        }\n        return componentDidMount;\n      }()\n    }, {\n      key: \"getStartupParams\",\n      value: function () {\n        var _getStartupParams = _asyncToGenerator(function* () {\n          var _this$props2 = this.props,\n            uriPrefix = _this$props2.uriPrefix,\n            loadNavigationState = _this$props2.loadNavigationState;\n          var url, loadedNavState;\n          try {\n            var _yield$Promise$all = yield Promise.all([Linking.getInitialURL(), loadNavigationState && loadNavigationState()]);\n            var _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n            url = _yield$Promise$all2[0];\n            loadedNavState = _yield$Promise$all2[1];\n          } catch (err) {}\n          return {\n            parsedUrl: url && urlToPathAndParams(url, uriPrefix),\n            userProvidedStartupState: loadedNavState\n          };\n        });\n        function getStartupParams() {\n          return _getStartupParams.apply(this, arguments);\n        }\n        return getStartupParams;\n      }()\n    }, {\n      key: \"componentDidCatch\",\n      value: function componentDidCatch(e) {\n        if (_reactNavigationIsHydratingState) {\n          _reactNavigationIsHydratingState = false;\n          console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state...');\n          this.dispatch(NavigationActions.init());\n        } else {\n          throw e;\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$_linkingSub;\n        this._isMounted = false;\n        if ((_this$_linkingSub = this._linkingSub) === null || _this$_linkingSub === void 0 ? void 0 : _this$_linkingSub.remove) {\n          var _this$_linkingSub2;\n          (_this$_linkingSub2 = this._linkingSub) === null || _this$_linkingSub2 === void 0 ? void 0 : _this$_linkingSub2.remove();\n        } else {\n          Linking.removeEventListener('url', this._handleOpenURL);\n        }\n        this.subs && this.subs.remove();\n        if (this._isStateful()) {\n          _statefulContainerCount--;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n        var navigation = this.props.navigation;\n        if (this._isStateful()) {\n          var navState = this.state.nav;\n          if (!navState) {\n            return this._renderLoading();\n          }\n          if (!this._navigation || this._navigation.state !== navState) {\n            this._navigation = getNavigation(Component.router, navState, this.dispatch, this._actionEventSubscribers, this._getScreenProps, function () {\n              return _this3._navigation;\n            });\n          }\n          navigation = this._navigation;\n        }\n        invariant(navigation, 'failed to get navigation');\n        return React.createElement(ThemeProvider, {\n          value: this._getTheme()\n        }, React.createElement(NavigationProvider, {\n          value: navigation\n        }, React.createElement(Component, _extends({}, this.props, {\n          navigation: navigation\n        }))));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps) {\n        validateProps(nextProps);\n        return null;\n      }\n    }]);\n    return NavigationContainer;\n  }(React.Component);\n  _defineProperty(NavigationContainer, \"router\", Component.router);\n  _defineProperty(NavigationContainer, \"navigationOptions\", null);\n  _defineProperty(NavigationContainer, \"defaultProps\", {\n    theme: 'light'\n  });\n  return NavigationContainer;\n}","map":{"version":3,"names":["React","Linking","Platform","BackHandler","NavigationActions","ThemeProvider","pathUtils","getNavigation","NavigationProvider","invariant","docsUrl","urlToPathAndParams","isStateful","props","navigation","validateProps","persistenceKey","console","warn","screenProps","persistNavigationState","loadNavigationState","theme","containerProps","_objectWithoutProperties","_excluded","keys","Object","length","Error","concat","join","undefined","_statefulContainerCount","_TESTING_ONLY_reset_container_count","_reactNavigationIsHydratingState","createNavigationContainer","Component","NavigationContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","Set","_ref","url","_this$props","enableURLHandling","uriPrefix","parsedUrl","path","params","action","router","getActionForPathAndParams","dispatch","_ref2","_asyncToGenerator","nav","err","_x","apply","arguments","_navState","state","lastNavState","reducedState","getStateForAction","navState","dispatchActionEvents","_actionEventSubscribers","forEach","subscriber","type","lastState","setState","_onNavigationStateChange","_persistNavigationState","_initialAction","init","_isStateful","addEventListener","subs","_isMounted","remove","back","_createClass","key","value","_renderLoading","renderLoadingExperimental","prevNav","onNavigationStateChange","process","env","REACT_NAV_LOGGING","group","log","groupEnd","newState","componentDidUpdate","_componentDidMount","_this2","NODE_ENV","detached","OS","_linkingSub","_handleOpenURL","userProvidedStartupState","_yield$this$getStartu","getStartupParams","startupState","_parsedUrl","urlAction","dispatchActions","componentDidMount","_getStartupParams","_this$props2","loadedNavState","_yield$Promise$all","Promise","all","getInitialURL","_yield$Promise$all2","_slicedToArray","componentDidCatch","e","componentWillUnmount","_this$_linkingSub","_this$_linkingSub2","removeEventListener","render","_this3","_navigation","_getScreenProps","createElement","_getTheme","_extends","getDerivedStateFromProps","nextProps"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-navigation\\node_modules\\@react-navigation\\native\\lib\\module\\createAppContainer.js"],"sourcesContent":["/* eslint-disable react/sort-comp */\n\nimport * as React from 'react';\nimport { Linking, Platform, BackHandler } from 'react-native';\nimport {\n  NavigationActions,\n  ThemeProvider,\n  pathUtils,\n  getNavigation,\n  NavigationProvider,\n} from '@react-navigation/core';\nimport invariant from './utils/invariant';\nimport docsUrl from './utils/docsUrl';\n\nconst { urlToPathAndParams } = pathUtils;\n\nfunction isStateful(props) {\n  return !props.navigation;\n}\n\nfunction validateProps(props) {\n  if (props.persistenceKey) {\n    console.warn(\n      'You passed persistenceKey prop to a navigator. ' +\n        'The persistenceKey prop was replaced by a more flexible persistence mechanism, ' +\n        'please see the navigation state persistence docs for more information. ' +\n        'Passing the persistenceKey prop is a no-op.'\n    );\n  }\n  if (isStateful(props)) {\n    return;\n  }\n  /* eslint-disable no-unused-vars */\n  const {\n    navigation,\n    screenProps,\n    persistNavigationState,\n    loadNavigationState,\n    theme,\n    ...containerProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  const keys = Object.keys(containerProps);\n\n  if (keys.length !== 0) {\n    throw new Error(\n      'This navigator has both navigation and container props, so it is ' +\n        `unclear if it should own its own state. Remove props: \"${keys.join(\n          ', '\n        )}\" ` +\n        'if the navigator should get its state from the navigation prop. If the ' +\n        'navigator should maintain its own state, do not pass a navigation prop.'\n    );\n  }\n  invariant(\n    (persistNavigationState === undefined &&\n      loadNavigationState === undefined) ||\n      (typeof persistNavigationState === 'function' &&\n        typeof loadNavigationState === 'function'),\n    'both persistNavigationState and loadNavigationState must either be undefined, or be functions'\n  );\n}\n\n// Track the number of stateful container instances. Warn if >0 and not using the\n// detached prop to explicitly acknowledge the behavior. We should deprecated implicit\n// stateful navigation containers in a future release and require a provider style pattern\n// instead in order to eliminate confusion entirely.\nlet _statefulContainerCount = 0;\nexport function _TESTING_ONLY_reset_container_count() {\n  _statefulContainerCount = 0;\n}\n\n// We keep a global flag to catch errors during the state persistence hydrating scenario.\n// The innermost navigator who catches the error will dispatch a new init action.\nlet _reactNavigationIsHydratingState = false;\n// Unfortunate to use global state here, but it seems necessesary for the time\n// being. There seems to be some problems with cascading componentDidCatch\n// handlers. Ideally the inner non-stateful navigator catches the error and\n// re-throws it, to be caught by the top-level stateful navigator.\n\n/**\n * Create an HOC that injects the navigation and manages the navigation state\n * in case it's not passed from above.\n * This allows to use e.g. the StackNavigator and TabNavigator as root-level\n * components.\n */\nexport default function createNavigationContainer(Component) {\n  class NavigationContainer extends React.Component {\n    subs = null;\n\n    static router = Component.router;\n    static navigationOptions = null;\n\n    static defaultProps = {\n      theme: 'light',\n    };\n\n    static getDerivedStateFromProps(nextProps) {\n      validateProps(nextProps);\n      return null;\n    }\n\n    _actionEventSubscribers = new Set();\n\n    constructor(props) {\n      super(props);\n\n      validateProps(props);\n\n      this._initialAction = NavigationActions.init();\n\n      if (\n        this._isStateful() &&\n        BackHandler &&\n        typeof BackHandler.addEventListener === 'function'\n      ) {\n        this.subs = BackHandler.addEventListener('hardwareBackPress', () => {\n          if (!this._isMounted) {\n            this.subs && this.subs.remove();\n          } else {\n            // dispatch returns true if the action results in a state change,\n            // and false otherwise. This maps well to what BackHandler expects\n            // from a callback -- true if handled, false if not handled\n            return this.dispatch(NavigationActions.back());\n          }\n        });\n      }\n\n      this.state = {\n        nav:\n          this._isStateful() && !props.loadNavigationState\n            ? Component.router.getStateForAction(this._initialAction)\n            : null,\n      };\n    }\n\n    _renderLoading() {\n      return this.props.renderLoadingExperimental\n        ? this.props.renderLoadingExperimental()\n        : null;\n    }\n\n    _isStateful() {\n      return isStateful(this.props);\n    }\n\n    _handleOpenURL = ({ url }) => {\n      const { enableURLHandling, uriPrefix } = this.props;\n      if (enableURLHandling === false) {\n        return;\n      }\n      const parsedUrl = urlToPathAndParams(url, uriPrefix);\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const action = Component.router.getActionForPathAndParams(path, params);\n        if (action) {\n          this.dispatch(action);\n        }\n      }\n    };\n\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (\n        typeof this.props.onNavigationStateChange === 'undefined' &&\n        this._isStateful() &&\n        !!process.env.REACT_NAV_LOGGING\n      ) {\n        if (console.group) {\n          console.group('Navigation Dispatch: ');\n          console.log('Action: ', action);\n          console.log('New State: ', nav);\n          console.log('Last State: ', prevNav);\n          console.groupEnd();\n        } else {\n          console.log('Navigation Dispatch: ', {\n            action,\n            newState: nav,\n            lastState: prevNav,\n          });\n        }\n        return;\n      }\n\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    componentDidUpdate() {\n      // Clear cached _navState every tick\n      if (this._navState === this.state.nav) {\n        this._navState = null;\n      }\n    }\n\n    async componentDidMount() {\n      this._isMounted = true;\n      if (!this._isStateful()) {\n        return;\n      }\n\n      if (process.env.NODE_ENV !== 'production' && !this.props.detached) {\n        if (_statefulContainerCount > 0) {\n          // Temporarily only show this on iOS due to this issue:\n          // https://github.com/react-navigation/react-navigation/issues/4196#issuecomment-390827829\n          if (Platform.OS === 'ios') {\n            console.warn(\n              `You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: ${docsUrl(\n                'common-mistakes.html#explicitly-rendering-more-than-one-navigator'\n              )}`\n            );\n          }\n        }\n      }\n      _statefulContainerCount++;\n      this._linkingSub = Linking.addEventListener('url', this._handleOpenURL);\n\n      // Pull out anything that can impact state\n      let parsedUrl = null;\n      let userProvidedStartupState = null;\n      if (this.props.enableURLHandling !== false) {\n        ({\n          parsedUrl,\n          userProvidedStartupState,\n        } = await this.getStartupParams());\n      }\n\n      // Initialize state. This must be done *after* any async code\n      // so we don't end up with a different value for this.state.nav\n      // due to changes while async function was resolving\n      let action = this._initialAction;\n      // eslint-disable-next-line react/no-access-state-in-setstate\n      let startupState = this.state.nav;\n      if (!startupState && !userProvidedStartupState) {\n        !!process.env.REACT_NAV_LOGGING &&\n          console.log('Init new Navigation State');\n        startupState = Component.router.getStateForAction(action);\n      }\n\n      // Pull user-provided persisted state\n      if (userProvidedStartupState) {\n        startupState = userProvidedStartupState;\n        _reactNavigationIsHydratingState = true;\n      }\n\n      // Pull state out of URL\n      if (parsedUrl) {\n        const { path, params } = parsedUrl;\n        const urlAction = Component.router.getActionForPathAndParams(\n          path,\n          params\n        );\n        if (urlAction) {\n          !!process.env.REACT_NAV_LOGGING &&\n            console.log(\n              'Applying Navigation Action for Initial URL:',\n              parsedUrl\n            );\n          action = urlAction;\n          startupState = Component.router.getStateForAction(\n            urlAction,\n            startupState\n          );\n        }\n      }\n\n      const dispatchActions = () =>\n        this._actionEventSubscribers.forEach((subscriber) =>\n          subscriber({\n            type: 'action',\n            action,\n            state: this.state.nav,\n            lastState: null,\n          })\n        );\n\n      if (startupState === this.state.nav) {\n        dispatchActions();\n        return;\n      }\n\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({ nav: startupState }, () => {\n        _reactNavigationIsHydratingState = false;\n        dispatchActions();\n      });\n    }\n\n    async getStartupParams() {\n      const { uriPrefix, loadNavigationState } = this.props;\n      let url, loadedNavState;\n      try {\n        [url, loadedNavState] = await Promise.all([\n          Linking.getInitialURL(),\n          loadNavigationState && loadNavigationState(),\n        ]);\n      } catch (err) {\n        // ignore\n      }\n      return {\n        parsedUrl: url && urlToPathAndParams(url, uriPrefix),\n        userProvidedStartupState: loadedNavState,\n      };\n    }\n\n    componentDidCatch(e) {\n      if (_reactNavigationIsHydratingState) {\n        _reactNavigationIsHydratingState = false;\n        console.warn(\n          'Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state...'\n        );\n        this.dispatch(NavigationActions.init());\n      } else {\n        throw e;\n      }\n    }\n\n    _persistNavigationState = async (nav) => {\n      const { persistNavigationState } = this.props;\n      if (persistNavigationState) {\n        try {\n          await persistNavigationState(nav);\n        } catch (err) {\n          console.warn(\n            'Uncaught exception while calling persistNavigationState()! You should handle exceptions thrown from persistNavigationState(), ignoring them may result in undefined behavior.'\n          );\n        }\n      }\n    };\n\n    componentWillUnmount() {\n      this._isMounted = false;\n\n      // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n      if (this._linkingSub?.remove) {\n        this._linkingSub?.remove();\n      } else {\n        Linking.removeEventListener('url', this._handleOpenURL);\n      }\n\n      this.subs && this.subs.remove();\n\n      if (this._isStateful()) {\n        _statefulContainerCount--;\n      }\n    }\n\n    // Per-tick temporary storage for state.nav\n\n    dispatch = (action) => {\n      if (this.props.navigation) {\n        return this.props.navigation.dispatch(action);\n      }\n\n      // navState will have the most up-to-date value, because setState sometimes behaves asyncronously\n      this._navState = this._navState || this.state.nav;\n      const lastNavState = this._navState;\n      invariant(lastNavState, 'should be set in constructor if stateful');\n      const reducedState = Component.router.getStateForAction(\n        action,\n        lastNavState\n      );\n      const navState = reducedState === null ? lastNavState : reducedState;\n\n      const dispatchActionEvents = () => {\n        this._actionEventSubscribers.forEach((subscriber) =>\n          subscriber({\n            type: 'action',\n            action,\n            state: navState,\n            lastState: lastNavState,\n          })\n        );\n      };\n\n      if (reducedState === null) {\n        // The router will return null when action has been handled and the state hasn't changed.\n        // dispatch returns true when something has been handled.\n        dispatchActionEvents();\n        return true;\n      }\n\n      if (navState !== lastNavState) {\n        // Cache updates to state.nav during the tick to ensure that subsequent calls will not discard this change\n        this._navState = navState;\n        this.setState({ nav: navState }, () => {\n          this._onNavigationStateChange(lastNavState, navState, action);\n          dispatchActionEvents();\n          this._persistNavigationState(navState);\n        });\n        return true;\n      }\n\n      dispatchActionEvents();\n      return false;\n    };\n\n    _getScreenProps = () => this.props.screenProps;\n\n    _getTheme = () => {\n      if (this.props.theme === 'light' || this.props.theme === 'dark') {\n        return this.props.theme;\n      } else if (this.props.theme === 'no-preference') {\n        return 'light';\n      } else {\n        console.warn(\n          `Invalid theme provided: ${this.props.theme}. Only 'light' and 'dark' are supported. Falling back to 'light'`\n        );\n        return 'light';\n      }\n    };\n\n    render() {\n      let navigation = this.props.navigation;\n      if (this._isStateful()) {\n        const navState = this.state.nav;\n        if (!navState) {\n          return this._renderLoading();\n        }\n        if (!this._navigation || this._navigation.state !== navState) {\n          this._navigation = getNavigation(\n            Component.router,\n            navState,\n            this.dispatch,\n            this._actionEventSubscribers,\n            this._getScreenProps,\n            () => this._navigation\n          );\n        }\n        navigation = this._navigation;\n      }\n      invariant(navigation, 'failed to get navigation');\n\n      return (\n        <ThemeProvider value={this._getTheme()}>\n          <NavigationProvider value={navigation}>\n            <Component {...this.props} navigation={navigation} />\n          </NavigationProvider>\n        </ThemeProvider>\n      );\n    }\n  }\n\n  return NavigationContainer;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}