{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport { SafeAreaProvider, SafeAreaConsumer, initialWindowSafeAreaInsets } from 'react-native-safe-area-context';\nimport { getStatusBarHeight, getBottomSpace } from 'react-native-iphone-x-helper';\nvar initialSafeAreaInsets = _objectSpread({\n  top: getStatusBarHeight(true),\n  bottom: getBottomSpace(),\n  right: 0,\n  left: 0\n}, initialWindowSafeAreaInsets);\nexport default function SafeAreaProviderCompat(_ref) {\n  var children = _ref.children;\n  return React.createElement(SafeAreaConsumer, null, function (insets) {\n    if (insets) {\n      return children;\n    }\n    return React.createElement(SafeAreaProvider, {\n      initialSafeAreaInsets: initialSafeAreaInsets\n    }, children);\n  });\n}","map":{"version":3,"names":["React","SafeAreaProvider","SafeAreaConsumer","initialWindowSafeAreaInsets","getStatusBarHeight","getBottomSpace","initialSafeAreaInsets","_objectSpread","top","bottom","right","left","SafeAreaProviderCompat","_ref","children","createElement","insets"],"sources":["C:\\Users\\filiz\\OneDrive\\Desktop\\versionthree\\Cashback-Calculator-Mobile-App\\node_modules\\react-navigation-stack\\lib\\module\\vendor\\views\\SafeAreaProviderCompat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  SafeAreaProvider,\n  SafeAreaConsumer,\n  initialWindowSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport {\n  getStatusBarHeight,\n  getBottomSpace,\n} from 'react-native-iphone-x-helper';\n\n// The provider component for safe area initializes asynchornously\n// Until the insets are available, there'll be blank screen\n// To avoid the blank screen, we specify some initial values\nconst initialSafeAreaInsets = {\n  // Approximate values which are good enough for most cases\n  top: getStatusBarHeight(true),\n  bottom: getBottomSpace(),\n  right: 0,\n  left: 0,\n  // If we are on a newer version of the library, we can get the correct window insets\n  // The component might not be filling the window, but this is good enough for most cases\n  ...initialWindowSafeAreaInsets,\n};\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport default function SafeAreaProviderCompat({ children }: Props) {\n  return (\n    <SafeAreaConsumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return children;\n        }\n\n        return (\n          <SafeAreaProvider initialSafeAreaInsets={initialSafeAreaInsets}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaConsumer>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,2BAHF,QAIO,gCAJP;AAKA,SACEC,kBADF,EAEEC,cAFF,QAGO,8BAHP;AAQA,IAAMC,qBAAqB,GAAAC,aAAA;EAEzBC,GAAG,EAAEJ,kBAAkB,CAAC,IAAD,CAFK;EAG5BK,MAAM,EAAEJ,cAAc,EAHM;EAI5BK,KAAK,EAAE,CAJqB;EAK5BC,IAAI,EAAE;AALsB,GAQzBR,2BAAA,CARL;AAeA,eAAe,SAASS,sBAATA,CAAAC,IAAA,EAAqD;EAAA,IAAnBC,QAAA,GAAAD,IAAA,CAAAC,QAAA;EAC/C,OACEd,KAAA,CAAAe,aAAA,CAACb,gBAAD,QACI,UAAAc,MAAD,EAAY;IACX,IAAIA,MAAJ,EAAY;MAIV,OAAOF,QAAP;IACD;IAED,OACEd,KAAA,CAAAe,aAAA,CAACd,gBAAD;MAAkBK,qBAAqB,EAAEA;IAAzC,GACGQ,QADH,CADF;EAKD,CAdH,CADF;AAkBD"},"metadata":{},"sourceType":"module","externalDependencies":[]}